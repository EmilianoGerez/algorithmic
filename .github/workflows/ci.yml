name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .  # Install package in development mode

      - name: Lint and validate code quality
        run: |
          ruff check . --output-format=github
          ruff format --check .

      - name: Type check with mypy
        run: |
          mypy core/ services/ infra/ --config-file=pyproject.toml

      - name: Check for mock usage in production code
        run: |
          echo "üîç Checking for mock usage in production code..."

          # Check for mock imports/usage in core modules (should be mock-free)
          if grep -r -n --include="*.py" "from.*mock\|import.*mock\|Mock()\|mock\." core/ services/ infra/ 2>/dev/null; then
            echo "‚ùå Found mock usage in production code! Mocks should only be in tests/"
            echo "üìç Production code should use real implementations or dependency injection"
            exit 1
          fi

          # Check for hardcoded test data in production
          if grep -r -n --include="*.py" -i "test.*data\|mock.*data\|dummy.*data" core/ services/ infra/ 2>/dev/null | grep -v "# Test data OK" | grep -v "test_data"; then
            echo "‚ùå Found potential hardcoded test data in production code!"
            echo "üìç Use configuration-driven data sources instead"
            exit 1
          fi

          echo "‚úÖ No mock usage or test data found in production code"

      - name: Test with pytest
        run: |
          pytest tests/ -v --cov=core --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
