[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "algorithmic"
version = "0.1.0"
description = "Quantitative trading algorithms with backtesting and live trading capabilities"
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.scripts]
quantbt = "services.cli.cli:app"

[tool.setuptools.packages.find]
include = ["core*", "infra*", "services*"]
exclude = ["tests*", "data*", "results*", "configs*"]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py
"tests/**/*.py" = ["S101"]  # assert statements in tests

[tool.ruff.lint.isort]
known-first-party = ["core", "infra", "services"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    "polars.*",
    "intervaltree.*",
    "numba.*",
    "hypothesis.*",
    "pandas_ta.*",
    "aiohttp.*",
    "certifi.*",
    "pydantic_settings.*",
    "matplotlib.*",
    "yaml.*",
    "plotly.*",
    "pyarrow.*",
    "mplfinance.*",
    "python_user_visible.*"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "services.cli.cli"
warn_unreachable = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "asyncio: marks tests as asyncio tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["core"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
